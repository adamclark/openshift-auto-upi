- name: Copy install-config.yaml to the {{ builder.install_cluster_dir }} directory
  template:
    src: files/vsphere/install-config.yaml
    dest: '{{ builder.install_cluster_dir }}'

- name: Create a backup copy of install-config.yaml as the installer deletes the original
  template:
    src: files/vsphere/install-config.yaml
    dest: '{{ builder.install_cluster_dir }}/install-config.backup.yaml'
    backup: True

- name: Create ignition configs
  command: |
    {{ builder.install_exe }} create ignition-configs --dir "{{ builder.install_cluster_dir }}"

- name: Copy ignition files to the webserver html directory
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    remote_src: True
    backup: True
  with_items:
    - { src: '{{ builder.install_cluster_dir }}/bootstrap.ign', dest: '{{ builder.web_cluster_dir }}' }
    - { src: '{{ builder.install_cluster_dir }}/master.ign',    dest: '{{ builder.web_cluster_dir }}' }
    - { src: '{{ builder.install_cluster_dir }}/worker.ign',    dest: '{{ builder.web_cluster_dir }}' }

- name: Check that ignition data is a valid JSON
  set_fact:
    dummy: '{{ lookup("template", "files/vsphere/append.ign", convert_data=False) | from_json }}'
  with_items: '{{ openshift_cluster_hosts }}'

- name: Create a virtual machine from a template
  vmware_guest:
    hostname: '{{ vsphere.vcenter_hostname }}'
    username: '{{ vsphere.vcenter_username }}'
    password: '{{ vsphere.vcenter_password }}'
    datacenter: '{{ vsphere.datacenter_name }}'
    cluster: '{{ vsphere.cluster_name }}'
    folder: '{{ vsphere.target_folder }}'
    name: '{{ item.hostname }}.{{ openshift_install_config.cluster_domain }}'
    template: '{{ vsphere.template_name }}'
    customvalues:
      - key: guestinfo.ignition.config.data.encoding
        value: base64
      - key: guestinfo.ignition.config.data
        value: '{{ lookup("template", "files/vsphere/append.ign", convert_data=False) | b64encode }}'
      - key: disk.EnableUUID
        value: 'TRUE'
    disk:
      - size_gb: '{{ item.disk_gb }}'
        type: thin
        datastore: '{{ vsphere.datastore_name }}'
    hardware:
      memory_mb: '{{ item.memory_mb }}'
      mem_reservation: '{{ item.memory_mb }}'
      mem_reservation: 0
      num_cpus: '{{ item.num_cpus }}'
      scsi: paravirtual
      memory_reservation_lock: True
      memory_reservation_lock: False
      hotadd_cpu: False
      hotremove_cpu: False
      hotadd_memory: False
    networks:
      - name: '{{ vsphere.network_name }}'
        mac: '{{ item.macaddr }}'
    wait_for_ip_address: no
    validate_certs: no
    state: present
  with_items: '{{ openshift_cluster_hosts }}'

- name: Power on virtual machine
  vmware_guest:
    hostname: '{{ vsphere.vcenter_hostname }}'
    username: '{{ vsphere.vcenter_username }}'
    password: '{{ vsphere.vcenter_password }}'
    name: '{{ item.hostname }}.{{ openshift_install_config.cluster_domain }}'
    validate_certs: no
    state: poweredon
  with_items: '{{ openshift_cluster_hosts }}'
